#version 430 core
layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

struct Particle
{
    vec4 position;
    vec4 prev_position;
    vec4 velocity;
    vec4 density;
};

layout(std430, binding = 0) buffer ParticleBuffer {
    Particle particles[];
};

void main()
{

    float dt = 0.01f;
    vec3 gravity = vec3(0.0f, -9.81f, 0.0f);

    if(gl_GlobalInvocationID.x < pow(2, 15))
    {
        Particle p = particles[gl_GlobalInvocationID.x];
        // Apply gravity 
        p.velocity.xyz += 0.001f * vec3(0.0f, -9.81, 0.0f);

        // Move to predicted position
        p.prev_position.xyz = p.position.xyz;
        p.position.xyz += p.velocity.xyz * dt;


        p.velocity.xyz = (p.position.xyz - p.prev_position.xyz) / dt;
        particles[gl_GlobalInvocationID.x] = p;
    }
}